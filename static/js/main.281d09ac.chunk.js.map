{"version":3,"sources":["componets/ContactF/ContactForm.module.css","componets/ContactList/ContactUser/ContactUser.module.css","componets/Filter/Filter.module.css","componets/ContactList/ContactList.module.css","componets/ContactF/ContactF.js","componets/ContactList/ContactUser/ContactUser.js","componets/ContactList/ContactList.js","componets/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handelChange","event","currentTarget","value","setState","handelSubmit","preventDefault","props","onSubmit","resetForm","this","className","styles","form","labelForm","input","type","onChange","pattern","title","required","btnAddContact","Component","ContactUser","id","onDeleteContacts","contactItem","phone","btnDelete","onClick","ContactList","contacts","list","map","Filter","filter","inputFilter","App","formSubmitHandler","some","contact","alert","uid","console","log","deleteContact","contactId","prevState","onChangeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","toLowerCase","filterUser","includes","ContactF","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,cAAgB,mCAAmC,UAAY,iC,gBCArJD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,KAAO,0BAA0B,MAAQ,2BAA2B,UAAY,iC,oBCAjJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,UAAY,4B,mBCAxGD,EAAOC,QAAU,CAAC,KAAO,4B,6bCoEVC,E,4MAjEbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAACC,GACd,MAAwBA,EAAMC,cAAtBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAACJ,GACdA,EAAMK,iBAEN,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,a,EAGPA,UAAY,WACV,EAAKL,SAAS,CACZN,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,MAAyBW,KAAKb,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMY,UAAWC,IAAOC,KAAML,SAAUE,KAAKL,aAA7C,UACE,wBAAOM,UAAWC,IAAOE,UAAzB,iBACO,IACL,uBACEH,UAAWC,IAAOG,MAClBC,KAAK,OACLlB,KAAK,OACLK,MAAOL,EACPmB,SAAUP,KAAKV,aACfkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOT,UAAWC,IAAOE,UAAzB,mBACS,IACP,uBACEH,UAAWC,IAAOG,MAClBC,KAAK,MACLlB,KAAK,SACLK,MAAOJ,EACPkB,SAAUP,KAAKV,aACfkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQT,UAAWC,IAAOS,cAAeL,KAAK,SAA9C,gC,GA1DkBM,a,iCCiBXC,EAhBK,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,GAAI1B,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,OAAQ0B,EAAuB,EAAvBA,iBACvC,OACE,qBAAId,UAAWC,IAAOc,YAAtB,UACE,sBAAMf,UAAWC,IAAOd,KAAxB,SAA+BA,IAC/B,sBAAMa,UAAWC,IAAOe,MAAxB,SAAgC5B,IAChC,wBACEY,UAAWC,IAAOgB,UAClBZ,KAAK,SACLa,QAAS,kBAAMJ,EAAiBD,IAHlC,wBCyBSM,EA5BK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUN,EAAuB,EAAvBA,iBAC/B,OACE,oBAAId,UAAWC,IAAOoB,KAAtB,SACGD,EAASE,KAAI,YAA2B,IAAxBT,EAAuB,EAAvBA,GAAI1B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACzB,OACE,cAAC,EAAD,CAEED,KAAMA,EACNC,OAAQA,EACR0B,iBAAkBA,EAClBD,GAAIA,GAJCA,S,gBCQFU,EAhBA,SAAC,GAAyB,IAAvB/B,EAAsB,EAAtBA,MAAOc,EAAe,EAAfA,SACvB,OACE,qBAAKN,UAAWC,IAAOuB,OAAvB,SACE,wBAAOxB,UAAWC,IAAOE,UAAzB,kCAEE,uBACEH,UAAWC,IAAOwB,YAClBpB,KAAK,OACLb,MAAOA,EACPc,SAAUA,U,gBCiFLoB,E,4MArFbxC,MAAQ,CACNkC,SAAUA,EACVI,OAAQ,I,EAwBVG,kBAAoB,YAAuB,IAApBxC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACnBgC,EAAa,EAAKlC,MAAlBkC,SAER,GAAIA,EAASQ,MAAK,SAACC,GAAD,OAAaA,EAAQ1C,OAASA,KAC9C2C,MAAM,GAAD,OACA3C,EADA,uEADP,CAMA,IAAM0B,EAAKkB,cACX,EAAKtC,SAAS,CACZ2B,SAAS,CAAE,CAAEjC,OAAMC,SAAQyB,OAAnB,mBAA4BO,IACpCI,OAAQ,KAGVQ,QAAQC,IAAI,CAAE9C,OAAMC,a,EAGtB8C,cAAgB,SAACC,GACf,EAAK1C,UAAS,SAAC2C,GAAD,MAAgB,CAC5BhB,SAAUgB,EAAUhB,SAASI,QAC3B,SAACK,GAAD,OAAaA,EAAQhB,KAAOsB,U,EAKlCE,eAAiB,SAAC/C,GAGhB,EAAKG,SAAS,CAAE+B,OAAQlC,EAAMC,cAAcC,S,uDAjD7C,WACC,IAAM4B,EAAWkB,aAAaC,QAAQ,YACrCP,QAAQC,IAAIb,GACb,IAAMoB,EAAiBC,KAAKC,MAAMtB,GACjCY,QAAQC,IAAIO,GAETA,GACFzC,KAAKN,SAAS,CAAE2B,SAAUoB,M,gCAI9B,SAAoBG,EAAYP,GAE1BrC,KAAKb,MAAMkC,WAAagB,EAAUhB,WAEpCkB,aAAaM,QAAQ,WAAYH,KAAKI,UAAU9C,KAAKb,MAAMkC,WAC3DY,QAAQC,IAAI,wI,oBAsChB,WACE,MAA6BlC,KAAKb,MAA1BkC,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,OAEZsB,EAAmBtB,EAAOuB,cAE1BC,EAAa5B,EAASI,QAAO,SAACK,GAAD,OACjCA,EAAQ1C,KAAK4D,cAAcE,SAASH,MAGtC,OACE,sBAAK9C,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,cAACkD,EAAD,CAAarD,SAAUE,KAAK4B,oBAE5B,oBAAI3B,UAAU,QAAd,sBACA,cAAC,EAAD,CAAQR,MAAOgC,EAAQlB,SAAUP,KAAKsC,iBACtC,cAAC,EAAD,CACEjB,SAAU4B,EACVlC,iBAAkBf,KAAKmC,uB,GA/EfvB,aCHlBwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.281d09ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1SFzQ\",\"input\":\"ContactForm_input__3dEap\",\"btnAddContact\":\"ContactForm_btnAddContact__2cD4C\",\"labelForm\":\"ContactForm_labelForm__2odCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactUser_contactItem__1pL2H\",\"name\":\"ContactUser_name__28Pw1\",\"phone\":\"ContactUser_phone__3fnXa\",\"btnDelete\":\"ContactUser_btnDelete__3uihr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2Ww5E\",\"inputFilter\":\"Filter_inputFilter__pFtpZ\",\"labelForm\":\"Filter_labelForm__22tnq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__caW1s\"};","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handelSubmit = (event) => {\n    event.preventDefault();\n    // console.log(this.state)\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handelSubmit}>\n        <label className={styles.labelForm}>\n          Name{\" \"}\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handelChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.labelForm}>\n          Number{\" \"}\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handelChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={styles.btnAddContact} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactUser.module.css\";\n\nconst ContactUser = ({ id, name, number, onDeleteContacts }) => {\n  return (\n    <li className={styles.contactItem}>\n      <span className={styles.name}>{name}</span>\n      <span className={styles.phone}>{number}</span>\n      <button\n        className={styles.btnDelete}\n        type=\"button\"\n        onClick={() => onDeleteContacts(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactUser;\n\nContactUser.propTypes = {\n  onDeleteContacts: PropTypes.func.isRequired,\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nimport ContactUser from \"./ContactUser\";\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ContactUser\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContacts={onDeleteContacts}\n            id={id}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <label className={styles.labelForm}>\n        Find contacts by name\n        <input\n          className={styles.inputFilter}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};","import React, { Component } from \"react\";\nimport ContactForm from \"./componets/ContactF\";\nimport ContactList from \"./componets/ContactList\";\nimport Filter from \"./componets/Filter\";\n\nimport { v4 as uid } from \"uuid\";\nimport contacts from \"./componets/ContactList/contacts.json\";\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n\n   componentDidMount(){\n    const contacts = localStorage.getItem('contacts');\n     console.log(contacts)\n    const parsedContacts = JSON.parse(contacts);\n     console.log(parsedContacts)\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n  };\n\n  componentDidUpdate( prevProps , prevState) {\n\n    if (this.state.contacts !== prevState.contacts) {\n\n      localStorage.setItem('contacts' ,JSON.stringify(this.state.contacts))\n      console.log('Обновился state с контактами ')\n    }\n  };\n\n  formSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    if (contacts.some((contact) => contact.name === name)) {\n      alert(\n        `${name} is already in contacts. Want to replace an existing contact ?`\n      );\n      return;\n    }\n    const id = uid();\n    this.setState({\n      contacts: [{ name, number, id }, ...contacts],\n      filter: \"\",\n    });\n\n    console.log({ name, number });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  onChangeFilter = (event) => {\n    // const filterValue = event.currentTarget.value;\n    // this.setState({ filter: filterValue });\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n \n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    const filterUser = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.onChangeFilter} />\n        <ContactList\n          contacts={filterUser}\n          onDeleteContacts={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}